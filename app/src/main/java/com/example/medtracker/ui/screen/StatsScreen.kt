package com.example.medtracker.ui.screen

import android.graphics.drawable.GradientDrawable
import android.icu.text.DateFormat
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material.Divider
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.livedata.observeAsState
import androidx.compose.runtime.remember
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.alpha
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.RectangleShape
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.medtracker.data.entity.HeartRate
import com.example.medtracker.data.viewmodel.HeartRateViewModel
import java.util.*

@Composable
fun StatsScreen(
    heartRateViewModel: HeartRateViewModel
) {
    val heartRates: List<HeartRate> by heartRateViewModel.allHeartRates.observeAsState(listOf())
    HeartRateList(heartRates = heartRates)
}

@Composable
fun HeartRateList(
    heartRates: List<HeartRate>
) {

        LazyColumn(Modifier.fillMaxSize()) {
            items(heartRates) { heartRate ->
                HeartRateItem(heartRate = heartRate)
            }
        }

}

// The UI for each list item can be generated by a reusable composable
@Composable
fun HeartRateItem(heartRate: HeartRate) {
    val formatter = remember { DateFormat.getDateTimeInstance(DateFormat.NONE, DateFormat.DEFAULT)}
    Row(
        modifier = Modifier
            .padding(4.dp)
            .height(IntrinsicSize.Min)
            .border(width = 1.dp, color = Color.LightGray, shape = RectangleShape)
    ) {
        Text(text = formatter.format(heartRate.date), Modifier.padding(4.dp), color = Color.Green)
        Divider(
            color = Color.Transparent,
            modifier = Modifier
                .fillMaxHeight()
                .width(4.dp)
        )
        Text(text = heartRate.value.toString(), Modifier.padding(4.dp), color = Color.Red)
    }
}

private val heartRates = listOf(
    HeartRate(Calendar.getInstance().time,80),
    HeartRate(Calendar.getInstance().time,110),
    HeartRate(Calendar.getInstance().time,75),
    HeartRate(Calendar.getInstance().time,120)
)

@Preview(showSystemUi = true, showBackground = false)
@Composable
fun HeartRateListPreview() {
    HeartRateList(heartRates = heartRates)
}

